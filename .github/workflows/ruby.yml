name: Ruby

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        ruby-version: ['2.7.1']
        
    services:
      postgres:
        image: postgres:12
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: password
        options: >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
          
          
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2
      
    - name: Set up Ruby
      uses: ruby/setup-ruby@473e4d8fe5dd94ee328fdfca9f8c9c7afc9dae5e
      with:
        ruby-version: ${{ matrix.ruby-version }}
        
    - name: Install PostgreSQL 12 client
      run: |
        sudo apt-get -yqq install libpq-dev
        
    - name: Cache Ruby Gems
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
  
    - name: Bundle Install
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3
        
    - name: Setup Node
      uses: actions/setup-node@v1
      with:
        node-version: 10.13.0
        
    - name: Find yarn cache location
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
      
    - name: JS package cache
      uses: actions/cache@v1
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
          
    - name: Install packages
      run: |
        yarn install --pure-lockfile
        
    - name: Run Tests
      env:
        PG_DATABASE: postgres
        PG_HOST: localhost
        PG_USER: postgres
        PG_PASSWORD: password
        RAILS_ENV: test
        WITH_COVERAGE: true
        DISABLE_SPRING: 1
      run: |
        bin/rails db:setup
        bundle exec rake test
        
    - name: Upload Code Coverage
      uses: actions/upload-artifact@v2
      with:
        name: code-coverage
        path: coverage/
        
    - name: Formatting and Security Checks
      run: |
        bundle exec rubocop
        bundle exec brakeman -z
        gem install bundle-audit
        bundle-audit update
        bundle-audit
